<%= link_to 'Back', data_upload_path %>

<div id="map" style="height: 600px"></div>
<script type="text/javascript">

$(document).ready(function(){

  var map = L.map('map').setView([39.7392, -104.9842], 5);

  L.tileLayer('http://{s}.tile.cloudmade.com/42c6e747565540068a4bb4ad883f1f41/997/256/{z}/{x}/{y}.png', {
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>'
  }).addTo(map);

  var countries = <%= raw @geojson %>;

  function getColor(d) {
  return d > 1000 ? '#800026' :
  d > 500  ? '#BD0026' :
  d > 200  ? '#E31A1C' :
  d > 100  ? '#FC4E2A' :
  d > 50   ? '#FD8D3C' :
  d > 20   ? '#FEB24C' :
  d > 10   ? '#FED976' :
  '#FFEDA0';
  }

  function style(feature) {
    return {
fillColor: getColor(feature.properties.density),
             weight: 2,
             opacity: 1,
             color: 'white',
             dashArray: '3',
             fillOpacity: 0.7
    };
  }

  function highlightFeature(e) {
  var layer = e.target;

  layer.setStyle({
weight: 5,
color: '#666',
dashArray: '',
fillOpacity: 0.7
});

  if (!L.Browser.ie && !L.Browser.opera) {
    //layer.bringToFront();
  }
}

  function resetHighlight(e) {
        geojson.resetStyle(e.target);
  }

  function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());
  }

  function onEachFeature(feature, layer) {
        layer.on({
                  mouseover: highlightFeature,
                          mouseout: resetHighlight,
                                  click: zoomToFeature
                                      });
  }

geojson = L.geoJson(countries, {
  style: style,
          onEachFeature: onEachFeature
          }).addTo(map);

});
</script>
